Aggregation commands (and a Geospatial command)	anonimongo/dbops/aggregation.html#aggregation-commands-and-a-geospatial-command	 Aggregation commands (and a Geospatial command)	
aggregate	anonimongo/dbops/aggregation.html#aggregate,Database,string,seq[T][BsonDocument],int,string,string	aggregation: aggregate(db: Database; coll: string; pipeline: seq[BsonDocument]; explain = false;\n          diskuse = false; cursor = bson(); maxTimeMS = 0; bypass = false;\n          readConcern = bsonNull(); collation = bsonNull(); hint = bsonNull();\n          comment = &quot;&quot;; wt = bsonNull(); explainVerbosity = &quot;&quot;): Future[BsonDocument]	
count	anonimongo/dbops/aggregation.html#count,Database,string,int,int,string	aggregation: count(db: Database; coll: string; query = bson(); limit = 0; skip = 0; hint = bsonNull();\n      readConcern = bsonNull(); collation = bsonNull(); explain = &quot;&quot;): Future[\n    BsonDocument]	
`distinct`	anonimongo/dbops/aggregation.html#distinct,Database,string,string,string	aggregation: `distinct`(db: Database; coll, key: string; query = bson(); readConcern = bsonNull();\n           collation = bsonNull(); explain = &quot;&quot;): Future[BsonDocument]	
mapReduce	anonimongo/dbops/aggregation.html#mapReduce,Database,string,BsonJs,BsonJs,BsonBase,int	aggregation: mapReduce(db: Database; coll: string; map, reduce: BsonJs; `out`: BsonBase;\n          query = bson(); sort = bsonNull(); limit = 0; finalize = bsonNull();\n          scope = bsonNull(); jsMode = false; verbose = false; bypass = false;\n          collation = bsonNull(); wt = bsonNull()): Future[BsonDocument]	
geoSearch	anonimongo/dbops/aggregation.html#geoSearch,Database,string,BsonDocument,seq[T][BsonDocument],int,int	aggregation: geoSearch(db: Database; coll: string; search: BsonDocument; near: seq[BsonDocument];\n          maxDistance = 0; limit = 0; readConcern = bsonNull()): Future[BsonDocument]	
